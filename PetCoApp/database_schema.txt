# PetCoApp Database Schema

The app uses PostgreSQL via Supabase with the following main tables:

## Main Tables

### users
- id (UUID, primary key)
- email (text, unique)
- full_name (text)
- profile_image_url (text)
- phone (text)
- location (geography)
- bio (text)
- credit_balance (integer) - for the credit-based system
- rating (numeric)
- created_at (timestamp)

### pets
- id (UUID, primary key)
- owner_id (UUID, foreign key to users)
- name (text)
- species (text)
- breed (text)
- age (integer)
- weight (numeric)
- care_instructions (text)
- image_url (text)
- created_at (timestamp)

### service_types
- id (UUID, primary key)
- name (text)
- description (text)
- credit_value (integer)
- icon (text)

### service_listings
- id (UUID, primary key)
- provider_id (UUID, foreign key to users)
- service_type_id (UUID, foreign key to service_types)
- title (text)
- description (text)
- location (geography)
- availability_schedule (jsonb)
- is_active (boolean)
- created_at (timestamp)

### service_requests
- id (UUID, primary key)
- requester_id (UUID, foreign key to users)
- provider_id (UUID, foreign key to users)
- pet_id (UUID, foreign key to pets)
- service_type_id (UUID, foreign key to service_types)
- start_time (timestamp)
- end_time (timestamp)
- status (text) - values: pending, accepted, completed
- location (geography)
- notes (text) 
- credit_amount (integer)
- created_at (timestamp)
# NOTE: The mobile app is trying to use a 'description' column that doesn't exist.
# Either update the app to use 'notes' instead of 'description' or add a 'description' column to the database.

### reviews
- id (UUID, primary key)
- service_request_id (UUID, foreign key to service_requests)
- reviewer_id (UUID, foreign key to users)
- reviewee_id (UUID, foreign key to users)
- rating (integer)
- comment (text)
- created_at (timestamp)

### messages
- id (UUID, primary key)
- sender_id (UUID, foreign key to users)
- recipient_id (UUID, foreign key to users)
- service_request_id (UUID, foreign key to service_requests)
- content (text)
- created_at (timestamp)
- read_at (timestamp, nullable)

### user_notification_settings
- id (UUID, primary key)
- user_id (UUID, foreign key to users)
- settings (jsonb) - containing preferences for different notification types
- master_enabled (boolean) - master toggle for all notifications
- push_token (text) - device token for push notifications
- updated_at (timestamp)
- created_at (timestamp)

## Key Functions
- complete_service_request: Handles changing a request status to completed and transferring credits
- find_nearby_providers: Uses PostGIS to find service providers within a specified distance, returning provider details including service types and availability
- handle_new_user: Trigger function that creates default notification settings for new users